{"version":3,"sources":["theme.ts","components/info/styled.ts","elements/text/styled.ts","elements/text/index.tsx","components/info/index.tsx","elements/grid-item/styled.ts","elements/grid-item/index.tsx","layouts/game/styled.ts","layouts/game/index.tsx","elements/timer/styled.ts","elements/timer/index.tsx","elements/card/styled.ts","elements/card/index.tsx","elements/button/styled.tsx","elements/button/index.tsx","elements/circle/styled.ts","elements/circle/index.tsx","components/notification-button/styled.ts","components/notification-button/index.tsx","components/text-button/index.tsx","modules/key-board/styled.ts","modules/key-board/index.tsx","elements/note/styled.tsx","elements/note/index.tsx","components/text-note/index.tsx","components/panel/styled.ts","elements/container/styled.ts","elements/container/index.tsx","components/panel/index.tsx","modules/score-panel/index.tsx","components/top-bar/styled.tsx","components/top-bar/index.tsx","elements/line/styled.ts","elements/line/index.tsx","components/underlined-text/styled.ts","components/underlined-text/index.tsx","modules/underlined-letters/styled.ts","modules/underlined-letters/index.tsx","api/index.ts","utils/index.ts","pages/game-page/index.tsx","store/actions/index.ts","router.tsx","App.tsx","reportWebVitals.ts","store/reducers/index.ts","index.tsx"],"names":["colorPalette","InfoContainer","styled","div","width","TextContainer","fontSize","color","fontWeight","selectable","concat","Text","text","className","Info","infoTitle","info","titleColor","infoColor","GridItemContainer","gridArea","GridItem","children","Container","TopBarContainer","GameContainer","GameGrid","Game","topBar","leftBar","clock","score","words","letters","timer","clueButton","nextButton","noteDescription","word","keyboard","attemptsLeft","rotate","keyframes","rotate1","fill","fill1","height","Filler","seconds","toggle","css","LeftMask","RightMask","Timer","size","borderRadius","padding","backgroundColor","alignItems","justifyContent","flexDirection","Card","ClickableArea","disabled","Button","onClick","ColorCircle","Circle","StyledCircle","NotificationButton","circleColor","textColor","TextButton","KeyboardContainer","Keyboard","buttonSize","map","letter","index","value","fontColor","NoteContainer","NoteArea","Border","Note","TextNote","trim","PanelContainer","ItemsContainer","borderColor","Panel","title","content","contentColor","containerHeight","titleSize","contentSize","ScorePanel","StyledText","TopBar","icon","CustomLine","Line","TextLineContainer","UnderlinedText","UnderlinedLettersContainer","UnderlinedLetters","letterBoxSize","options","method","url","headers","getWord","a","axios","request","response","data","toLowerCase","console","log","alphabet","addLetters","wordLetters","lettersLeft","length","newLetters","i","push","getRandomItem","randomItem","shuffle","filter","array","randomIndex","Math","floor","random","find","character","getClueIndex","sort","item","indexOf","GamePage","dispatch","useDispatch","useSelector","state","attemps","time","clues","currentDescription","currentWord","lettersKeyboard","currentWordSplitted","loading","skips","useEffect","then","definition","type","payload","initGame","every","currentValue","undefined","wordGuessed","interval","setInterval","clearInterval","toString","reduceSkips","letterSelected","split","indexs","includes","indexes","letterGuessed","letterGuessedFailed","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","newCurrentWordSplitted","newLettersKeyboardColor","forEach","disabledLetterKeyboard","newLettersKeyboard","clueIndex","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9a07aca.chunk.js","sourcesContent":["export const responsiveBreakPoints = {\n  small: \"(max-width: 599px)\",\n  medium: \"(min-width: 600px) and (max-width: 1199px)\",\n  large: \"(min-width: 1200px)\",\n};\n\nexport const colorPalette = {\n  primary: \"#09415A\",\n  secondary: \"#13719C\",\n};\n","import styled from \"styled-components\";\n\ntype InfoContainerProps = {\n  width: string;\n};\n\nexport const InfoContainer = styled.div<InfoContainerProps>`\n  ${({ width }) => ` width: ${width};`}\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\ntype TextContainerProps = {\n  fontSize?: string;\n  color?: string;\n  fontWeight?: string;\n  selectable?: boolean;\n};\n\nexport const TextContainer = styled.div<TextContainerProps>`\n  width: fit-content;\n\n  ${({ fontSize, color, fontWeight, selectable }) => {\n    return \"\".concat(\n      `font-size:${fontSize ? fontSize : `16px`};`,\n      `color:${color ? color : `black`};`,\n      `font-weight:${fontWeight ? fontWeight : `normal`};`,\n      `user-select:${!selectable ? `none` : `auto`};`\n    );\n  }}\n`;\n","import React from \"react\";\nimport { TextContainer } from \"./styled\";\n\ntype TextProps = {\n  text: string;\n  fontSize?: string;\n  color?: string;\n  fontWeight?: string;\n  className?: string;\n  selectable?: boolean;\n};\n\nfunction Text({\n  text,\n  fontSize,\n  color,\n  fontWeight,\n  className,\n  selectable,\n}: TextProps) {\n  return (\n    <TextContainer\n      className={className}\n      fontSize={fontSize}\n      color={color}\n      fontWeight={fontWeight}\n      selectable={selectable}\n    >\n      {text}\n    </TextContainer>\n  );\n}\n\nexport default Text;\n","import React from \"react\";\nimport { InfoContainer } from \"./styled\";\nimport Text from \"../../elements/text\";\n\ntype InfoProps = {\n  width: string;\n  infoTitle: string;\n  info: string;\n  titleColor: string;\n  infoColor: string;\n  fontSize?: string;\n};\n\nfunction Info({\n  width,\n  infoTitle,\n  info,\n  titleColor,\n  infoColor,\n  fontSize,\n}: InfoProps) {\n  return (\n    <InfoContainer width={width}>\n      <Text\n        text={infoTitle}\n        color={titleColor}\n        fontSize={fontSize}\n        fontWeight=\"bold\"\n      />\n      <Text\n        text={info}\n        color={infoColor}\n        fontWeight=\"bold\"\n        fontSize={fontSize}\n      />\n    </InfoContainer>\n  );\n}\n\nexport default Info;\n","import styled from \"styled-components\";\n\ntype GridItemContainerProps = {\n  gridArea: string;\n};\n\nexport const GridItemContainer = styled.div<GridItemContainerProps>`\n  ${({ gridArea }) => `grid-area:${gridArea};`}\n  width:100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import React, { ReactNode } from \"react\";\nimport { GridItemContainer } from \"./styled\";\n\ntype GridItemProps = {\n  gridArea: string;\n  children: ReactNode;\n};\n\nfunction GridItem({ gridArea, children }: GridItemProps) {\n  return <GridItemContainer gridArea={gridArea}>{children}</GridItemContainer>;\n}\n\nexport default GridItem;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nexport const TopBarContainer = styled.div`\n  width: 100%;\n  height: 80px;\n`;\n\nexport const GameContainer = styled.div`\n  width: 100%;\n  height: calc(100vh - 80px);\n  padding: 30px;\n`;\n\nexport const GameGrid = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  min-height: 600px;\n  justify-items: center;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(12, 1fr);\n  gap: 20px 40px;\n  grid-template-areas:\n    \"leftBar noteDescription noteDescription clock\"\n    \"leftBar noteDescription noteDescription clock\"\n    \"leftBar noteDescription noteDescription clock\"\n    \"leftBar word word timer\"\n    \"leftBar word word .\"\n    \"leftBar keyboard keyboard clueButton\"\n    \"leftBar keyboard keyboard clueButton\"\n    \"leftBar keyboard keyboard clueButton\"\n    \"leftBar keyboard keyboard .\"\n    \"leftBar keyboard keyboard nextButton\"\n    \"leftBar attempts attempts nextButton\"\n    \"leftBar attempts attempts nextButton\";\n`;\n","import React, { ReactNode } from \"react\";\nimport GridItem from \"../../elements/grid-item\";\nimport { Container, GameContainer, GameGrid, TopBarContainer } from \"./styled\";\n\ntype GameProps = {\n  topBar: ReactNode;\n  leftBar: ReactNode;\n  score: ReactNode;\n  words: ReactNode;\n  letters: ReactNode;\n  clock: ReactNode;\n  timer: ReactNode;\n  clueButton: ReactNode;\n  nextButton: ReactNode;\n  noteDescription: ReactNode;\n  word: ReactNode;\n  keyboard: ReactNode;\n  attemptsLeft: ReactNode;\n};\n\nfunction Game({\n  topBar,\n  leftBar,\n  score,\n  words,\n  letters,\n  clock,\n  timer,\n  clueButton,\n  nextButton,\n  noteDescription,\n  word,\n  keyboard,\n  attemptsLeft,\n}: GameProps) {\n  return (\n    <Container>\n      <TopBarContainer>{topBar}</TopBarContainer>\n      <GameContainer>\n        <GameGrid>\n          <GridItem gridArea=\"leftBar\">{leftBar}</GridItem>\n          <GridItem gridArea=\"noteDescription\">{noteDescription}</GridItem>\n          <GridItem gridArea=\"clock\">{clock}</GridItem>\n          <GridItem gridArea=\"timer\">{timer}</GridItem>\n          <GridItem gridArea=\"clueButton\">{clueButton}</GridItem>\n          <GridItem gridArea=\"nextButton\">{nextButton}</GridItem>\n          <GridItem gridArea=\"word\">{word}</GridItem>\n          <GridItem gridArea=\"keyboard\">{keyboard}</GridItem>\n          <GridItem gridArea=\"attempts\">{attemptsLeft}</GridItem>\n        </GameGrid>\n      </GameContainer>\n    </Container>\n  );\n}\n\nexport default Game;\n","import styled, { css, keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(180deg);\n  }\n`;\n\nconst rotate1 = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(180deg);\n  }\n`;\n\nconst fill = keyframes`\n  from {\n    opacity: 1;\n    transform: rotate(0deg)\n  }\n  to {\n    transform: rotate(180deg);\n    opacity: 1;\n  }\n`;\n\nconst fill1 = keyframes`\n  0% {\n    opacity: 1;\n    transform: rotate(0deg)\n  }\n  100% {\n    transform: rotate(180deg);\n    opacity: 1;\n  }\n`;\n\ntype AnimationProps = {\n  seconds: number;\n  toggle?: boolean;\n};\n\ntype ContainerProps = {\n  height: string;\n  width: string;\n  color?: string;\n};\n\nexport const Container = styled.div<ContainerProps>`\n  border-radius: 50%;\n  ${({ height, width, color }) => {\n    return \"\".concat(\n      `height: ${height};`,\n      `width: ${width};`,\n      `background-color: ${color ? color : \"black\"};`\n    );\n  }}\n  border: 5px solid black;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const Filler = styled.div<AnimationProps>`\n  width: 50%;\n  height: 100%;\n  background-color: #ffffff;\n  position: absolute;\n  left: 0;\n  border-top-left-radius: 50px;\n  border-bottom-left-radius: 50px;\n  transform-origin: right;\n  animation: ${({ seconds, toggle }) =>\n    toggle\n      ? css`\n          ${rotate} ${seconds}s linear forwards;\n        `\n      : css`\n          ${rotate1} ${seconds}s linear forwards;\n        `};\n`;\n\nexport const LeftMask = styled.div`\n  width: 50%;\n  height: 100%;\n  background-color: inherit;\n  position: absolute;\n  left: 0;\n  border-top-left-radius: 50px;\n  border-bottom-left-radius: 50px;\n`;\n\nexport const RightMask = styled.div<AnimationProps>`\n  width: 50%;\n  height: 100%;\n  background-color: #ffffff;\n  position: absolute;\n  right: 0;\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  transform-origin: left;\n\n  animation: ${({ seconds, toggle }) =>\n    toggle\n      ? css`\n          ${fill} ${seconds}s linear forwards;\n        `\n      : css`\n          ${fill1} ${seconds}s linear forwards;\n        `};\n  animation-delay: ${({ seconds }) =>\n    css`\n      ${seconds}s\n    `};\n  opacity: 0;\n`;\n","import React from \"react\";\nimport { Container, Filler, LeftMask, RightMask } from \"./styled\";\n\ntype TimerProps = {\n  size: string;\n  seconds: number;\n  color?: string;\n  toggle?: boolean;\n};\n\nfunction Timer({ seconds, toggle, size, color }: TimerProps) {\n  return (\n    <Container width={size} height={size} color={color}>\n      <Filler seconds={seconds / 2} toggle={toggle} />\n      <LeftMask />\n      <RightMask seconds={seconds / 2} toggle={toggle} />\n    </Container>\n  );\n}\n\nexport default Timer;\n","import styled from \"styled-components\";\n\ntype ContainerProps = {\n  width: string;\n  height: string;\n  borderRadius?: string;\n  padding?: string;\n  backgroundColor?: string;\n  alignItems?: string;\n  justifyContent?: string;\n  flexDirection?: string;\n};\n\nexport const Container = styled.div<ContainerProps>`\n  border: 1px solid #d9d9d9;\n  box-shadow: 0px 5px 10px 0px #c3c3c3;\n  position: relative;\n  display: flex;\n\n  ${({\n    width,\n    height,\n    borderRadius,\n    padding,\n    backgroundColor,\n    alignItems,\n    justifyContent,\n    flexDirection,\n  }) => {\n    return \"\".concat(\n      `width:${width};`,\n      `height:${height};`,\n      `background-color:${backgroundColor ? backgroundColor : `white`};`,\n      `border-radius:${borderRadius ? borderRadius : `30px`};`,\n      `padding:${padding ? padding : `10px`};`,\n      `align-items:${alignItems ? alignItems : ``};`,\n      `justify-content:${justifyContent ? justifyContent : `center`};`,\n      `flex-direction:${flexDirection ? flexDirection : `column`};`\n    );\n  }}\n`;\n","import React, { ReactNode } from \"react\";\nimport { Container } from \"./styled\";\n\ntype CardProps = {\n  width: string;\n  height: string;\n  borderRadius?: string;\n  padding?: string;\n  children?: ReactNode;\n  backgroundColor?: string;\n  className?: string;\n  alignItems?: \"stretch\" | \"center\" | \"start\" | \"end\";\n  flexDirection?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  justifyContent?:\n    | \"start\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n};\n\nfunction Card({\n  width,\n  height,\n  borderRadius,\n  children,\n  padding,\n  backgroundColor,\n  className,\n  flexDirection,\n  alignItems,\n  justifyContent,\n}: CardProps) {\n  return (\n    <Container\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      className={className}\n      width={width}\n      height={height}\n      borderRadius={borderRadius}\n      padding={padding}\n      backgroundColor={backgroundColor}\n      flexDirection={flexDirection}\n    >\n      {children}\n    </Container>\n  );\n}\n\nexport default Card;\n","import styled from \"styled-components\";\n\ntype ClickableAreaProps = {\n  width: string;\n  height: string;\n  backgroundColor?: string;\n  disabled?: boolean;\n  flexDirection?: string;\n  padding?: string;\n};\n\nexport const ClickableArea = styled.div<ClickableAreaProps>`\n  ${({ width, height, backgroundColor, flexDirection, padding }) => {\n    return \"\".concat(\n      `width: ${width};`,\n      `height: ${height};`,\n      `background-color: ${backgroundColor ? backgroundColor : \"lightblue\"};`,\n      `flex-direction: ${flexDirection ? flexDirection : \"row\"};`,\n      `padding: ${padding ? padding : \"10px\"};`\n    );\n  }}\n  ${({ disabled }) =>\n    disabled ? `pointer-events: none;filter: brightness(80%);` : ``}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  background-position: center;\n  transition: filter 0.2s;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    filter: brightness(90%);\n  }\n`;\n","import React, { ReactNode } from \"react\";\nimport { ClickableArea } from \"./styled\";\n\ntype ButtonProps = {\n  width: string;\n  height: string;\n  onClick: () => void;\n  backgroundColor?: string;\n  children?: ReactNode;\n  disabled?: boolean;\n  className?: string;\n  padding?: string;\n  flexDirection?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n};\n\nfunction Button({\n  width,\n  height,\n  children,\n  disabled,\n  className,\n  backgroundColor,\n  flexDirection,\n  padding,\n  onClick,\n}: ButtonProps) {\n  return (\n    <ClickableArea\n      className={className}\n      width={width}\n      height={height}\n      onClick={onClick}\n      disabled={disabled}\n      flexDirection={flexDirection}\n      backgroundColor={backgroundColor}\n      padding={padding}\n    >\n      {children}\n    </ClickableArea>\n  );\n}\n\nexport default Button;\n","import styled from \"styled-components\";\n\ntype ColorCircleProps = {\n  width: string;\n  height: string;\n  color?: string;\n};\n\nexport const ColorCircle = styled.div<ColorCircleProps>`\n  ${({ width, height, color }) => {\n    return \"\".concat(\n      `width:${width};`,\n      `height:${height};`,\n      `color:${color ? color : `black`};`\n    );\n  }}\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { ReactNode } from \"react\";\nimport { ColorCircle } from \"./styled\";\n\ntype CircleProps = {\n  size: string;\n  color?: string;\n  children?: ReactNode;\n  className?: string;\n};\n\nfunction Circle({ size, color, children, className }: CircleProps) {\n  return (\n    <ColorCircle className={className} width={size} height={size} color={color}>\n      {children}\n    </ColorCircle>\n  );\n}\n\nexport default Circle;\n","import styled from \"styled-components\";\nimport Circle from \"../../elements/circle\";\n\ntype StyledCircleProps = {\n  backgroundColor: string;\n};\n\nexport const StyledCircle = styled(Circle)<StyledCircleProps>`\n  ${({ backgroundColor }) => `background-color: ${backgroundColor};`}\n  position: absolute;\n  top: -15%;\n  right: -15%;\n`;\n","import React, { ReactNode } from \"react\";\nimport Card from \"../../elements/card\";\nimport Button from \"../../elements/button\";\nimport Text from \"../../elements/text\";\nimport { StyledCircle } from \"./styled\";\n\ntype NotificationButtonProps = {\n  size: string;\n  backgroundColor: string;\n  circleColor: string;\n  textColor: string;\n  text: string;\n  children: ReactNode;\n  fontSize: string;\n  disabled?: boolean;\n  onClick: () => void;\n};\n\nfunction NotificationButton({\n  size,\n  backgroundColor,\n  circleColor,\n  textColor,\n  disabled,\n  text,\n  children,\n  fontSize,\n  onClick,\n}: NotificationButtonProps) {\n  return (\n    <Card width={size} height={size} padding=\"0px\" borderRadius=\"10px\">\n      <Button\n        disabled={disabled}\n        backgroundColor={backgroundColor}\n        width={\"100%\"}\n        height={\"100%\"}\n        onClick={onClick}\n      >\n        {children}\n        <StyledCircle size=\"40%\" backgroundColor={circleColor}>\n          <Text\n            text={text}\n            fontSize={fontSize}\n            fontWeight=\"bold\"\n            color={textColor}\n          />\n        </StyledCircle>\n      </Button>\n    </Card>\n  );\n}\n\nexport default NotificationButton;\n","import React from \"react\";\nimport Button from \"../../elements/button\";\nimport Card from \"../../elements/card\";\nimport Text from \"../../elements/text\";\n\ntype TextButtonProps = {\n  width: string;\n  height: string;\n  text: string;\n  backgroundColor: string;\n  textColor?: string;\n  disabled?: boolean;\n  fontSize?: string;\n  onClick: () => void;\n};\n\nfunction TextButton({\n  width,\n  height,\n  text,\n  backgroundColor,\n  textColor,\n  fontSize,\n  disabled,\n  onClick,\n}: TextButtonProps) {\n  return (\n    <Card width={width} height={height} padding=\"0px\" borderRadius=\"10px\">\n      <Button\n        disabled={disabled}\n        backgroundColor={backgroundColor}\n        width={\"100%\"}\n        height={\"100%\"}\n        flexDirection=\"column\"\n        onClick={onClick}\n      >\n        <Text\n          text={text}\n          fontSize={fontSize}\n          fontWeight=\"bold\"\n          color={textColor}\n        />\n      </Button>\n    </Card>\n  );\n}\n\nexport default TextButton;\n","import styled from \"styled-components\";\n\ntype KeyboardContainerProps = {\n  width: string;\n  height: string;\n};\n\nexport const KeyboardContainer = styled.div<KeyboardContainerProps>`\n  ${({ width, height }) => \"\".concat(`width:${width};`, `height:${height};`)}\n  display:flex;\n  gap: 10px;\n  padding: 20px 0;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport TextButton from \"../../components/text-button\";\nimport { KeyboardContainer } from \"./styled\";\n\ntype KeyboardProps = {\n  width: string;\n  height: string;\n  letters: {\n    value: string;\n    disabled: boolean;\n    color: string;\n    fontColor: string;\n  }[];\n  buttonSize: string;\n  fontSize?: string;\n  onClick: (letterIndex: number) => void;\n};\n\nfunction Keyboard({\n  height,\n  width,\n  letters,\n  buttonSize,\n  fontSize,\n  onClick,\n}: KeyboardProps) {\n  return (\n    <KeyboardContainer height={height} width={width}>\n      {letters.map((letter, index) => (\n        <TextButton\n          key={index}\n          backgroundColor={letter.color}\n          height={buttonSize}\n          width={buttonSize}\n          text={letter.value}\n          disabled={letter.disabled}\n          fontSize={fontSize}\n          textColor={letter.fontColor}\n          onClick={() => {\n            onClick(index);\n          }}\n        />\n      ))}\n    </KeyboardContainer>\n  );\n}\n\nexport default Keyboard;\n","import styled from \"styled-components\";\n\ntype ContainerProps = {\n  width: string;\n  height: string;\n};\n\nexport const NoteContainer = styled.div<ContainerProps>`\n  ${({ width, height }) => {\n    return \"\".concat(` width: ${width};`, `height: ${height};`);\n  }}\n  position: relative;\n`;\n\nexport const NoteArea = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #ffeeaa;\n  border: 1 solid #d1b644;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 10px;\n`;\n\nexport const Border = styled.div`\n  width: 0;\n  height: 0;\n  border-right: 20px solid white;\n  border-bottom: 20px solid #d1b644;\n  border-bottom-left-radius: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import React, { ReactNode } from \"react\";\nimport { NoteContainer, NoteArea, Border } from \"./styled\";\n\ntype NoteProps = {\n  width: string;\n  height: string;\n  children?: ReactNode;\n};\n\nfunction Note({ width, height, children }: NoteProps) {\n  return (\n    <NoteContainer width={width} height={height}>\n      <NoteArea>{children}</NoteArea>\n      <Border />\n    </NoteContainer>\n  );\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"../../elements/note\";\nimport Text from \"../../elements/text\";\n\ntype TextNoteProps = {\n  width: string;\n  height: string;\n  text: string;\n  textColor?: string;\n  fontSize?: string;\n};\n\nfunction TextNote({ width, height, text, textColor, fontSize }: TextNoteProps) {\n  return (\n    <Note width={width} height={height}>\n      <Text\n        text={`\"${text.trim()}\"`}\n        color={textColor}\n        fontWeight=\"bold\"\n        fontSize={fontSize}\n      />\n    </Note>\n  );\n}\n\nexport default TextNote;\n","import styled from \"styled-components\";\n\ntype PanelContainerProps = {\n  flexDirection?: string;\n};\n\nexport const PanelContainer = styled.div<PanelContainerProps>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 10px;\n  ${({ flexDirection }) =>\n    `flex-direction:${flexDirection ? flexDirection : `column`}`}\n`;\n","import styled from \"styled-components\";\n\ntype ItemsContainerProps = {\n  width?: string;\n  height?: string;\n  alignItems?: string;\n  justifyContent?: string;\n  borderColor?: string;\n};\n\nexport const ItemsContainer = styled.div<ItemsContainerProps>`\n  ${({ width, height, alignItems, justifyContent }) => {\n    return \"\".concat(\n      `width:${width ? width : `100%`};`,\n      `height:${height ? height : ``};`,\n      `align-Items:${alignItems ? alignItems : ``};`,\n      `justify-content:${justifyContent ? justifyContent : `center`};`\n    );\n  }}\n  border-radius: 5px;\n  border: 1px solid\n    ${({ borderColor }) => (borderColor ? `${borderColor}` : `#C4C4C4`)};\n  padding: 5px;\n  display: flex;\n`;\n","import React, { ReactNode } from \"react\";\nimport { ItemsContainer } from \"./styled\";\n\ntype ContainerProps = {\n  width?: string;\n  height?: string;\n  borderColor?: string;\n  className?: string;\n  alignItems?: \"stretch\" | \"center\" | \"start\" | \"end\";\n  justifyContent?:\n    | \"start\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  children: ReactNode;\n};\n\nfunction Container({\n  width,\n  height,\n  alignItems,\n  justifyContent,\n  children,\n  borderColor,\n  className,\n}: ContainerProps) {\n  return (\n    <ItemsContainer\n      className={className}\n      width={width}\n      height={height}\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      borderColor={borderColor}\n    >\n      {children}\n    </ItemsContainer>\n  );\n}\n\nexport default Container;\n","import React from \"react\";\nimport { PanelContainer } from \"./styled\";\nimport Text from \"../../elements/text\";\nimport Container from \"../../elements/container\";\n\ntype PanelProps = {\n  title: string;\n  content: string;\n  titleColor: string;\n  contentColor: string;\n  containerHeight?: string;\n  titleSize?: string;\n  contentSize?: string;\n  flexDirection?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n};\n\nfunction Panel({\n  title,\n  content,\n  titleColor,\n  contentColor,\n  containerHeight,\n  flexDirection,\n  titleSize,\n  contentSize,\n}: PanelProps) {\n  return (\n    <PanelContainer flexDirection={flexDirection}>\n      <Text\n        text={title}\n        color={titleColor}\n        fontWeight=\"bold\"\n        fontSize={titleSize}\n      />\n      <Container width=\"100%\" height={containerHeight}>\n        <Text\n          text={content}\n          color={contentColor}\n          fontWeight=\"bold\"\n          fontSize={contentSize}\n        />\n      </Container>\n    </PanelContainer>\n  );\n}\n\nexport default Panel;\n","import React from \"react\";\nimport Panel from \"../../components/panel\";\nimport Card from \"../../elements/card\";\nimport { colorPalette } from \"../../theme\";\n\ntype ScorePanelProps = {\n  score: string;\n  words: string;\n  letters: string;\n  titleSize?: string;\n  contentSize?: string;\n};\n\nfunction ScorePanel({\n  score,\n  words,\n  letters,\n  titleSize,\n  contentSize,\n}: ScorePanelProps) {\n  return (\n    <Card\n      width=\"100%\"\n      height=\"100%\"\n      flexDirection=\"column\"\n      justifyContent=\"start\"\n      padding=\"20px;\"\n    >\n      <Panel\n        title=\"Score\"\n        content={score}\n        titleColor={colorPalette.primary}\n        contentColor={colorPalette.secondary}\n        titleSize={titleSize}\n        contentSize={contentSize}\n      />\n      <Panel\n        title=\"Words\"\n        content={words}\n        titleColor={colorPalette.primary}\n        contentColor={colorPalette.secondary}\n        titleSize={titleSize}\n        contentSize={contentSize}\n      />\n      <Panel\n        title=\"Letters\"\n        content={letters}\n        titleColor={colorPalette.primary}\n        contentColor={colorPalette.secondary}\n        titleSize={titleSize}\n        contentSize={contentSize}\n      />\n    </Card>\n  );\n}\n\nexport default ScorePanel;\n","import styled from \"styled-components\";\nimport Text from \"../../elements/text\";\n\ntype TopBarContainerProps = {\n  height: string;\n  backgroundColor: string;\n};\n\nexport const TopBarContainer = styled.div<TopBarContainerProps>`\n  ${({ height, backgroundColor }) =>\n    \"\".concat(`height:${height};`, `background-color:${backgroundColor};`)}\n  display: flex;\n  position: relative;\n  width: 100%;\n  padding: 10px 10px 10px 30px;\n`;\n\nexport const StyledText = styled(Text)`\n  width: 100%;\n  text-align: center;\n`;\n","import React, { ReactNode } from \"react\";\nimport Button from \"../../elements/button\";\nimport { StyledText, TopBarContainer } from \"./styled\";\n\ntype TopBarProps = {\n  height: string;\n  icon: ReactNode;\n  text: string;\n  backgroundColor: string;\n  onClick: () => void;\n  textColor?: string;\n  fontSize?: string;\n};\n\nfunction TopBar({\n  height,\n  icon,\n  text,\n  fontSize,\n  textColor,\n  backgroundColor,\n  onClick,\n}: TopBarProps) {\n  return (\n    <TopBarContainer height={height} backgroundColor={backgroundColor}>\n      <Button\n        height=\"auto\"\n        onClick={onClick}\n        width=\"fit-content\"\n        backgroundColor=\"inherit\"\n      >\n        {icon}\n      </Button>\n\n      <StyledText\n        text={text}\n        fontSize={fontSize}\n        color={textColor}\n        fontWeight=\"bold\"\n      />\n    </TopBarContainer>\n  );\n}\n\nexport default TopBar;\n","import styled from \"styled-components\";\n\ntype CustomLineProps = {\n  width: string;\n  height?: string;\n  color?: string;\n};\n\nexport const CustomLine = styled.div<CustomLineProps>`\n  border-radius: 50px;\n  ${({ width, height, color }) => {\n    return \"\".concat(\n      `width:${width};`,\n      `height:${height ? height : `8px`};`,\n      `background-color:${color ? color : `black`};`\n    );\n  }}\n`;\n","import React from \"react\";\nimport { CustomLine } from \"./styled\";\n\ntype LineProps = {\n  width: string;\n  height?: string;\n  color?: string;\n  className?: string;\n};\n\nfunction Line({ width, height, color, className }: LineProps) {\n  return (\n    <CustomLine\n      className={className}\n      width={width}\n      height={height}\n      color={color}\n    />\n  );\n}\n\nexport default Line;\n","import styled from \"styled-components\";\n\ntype TextLineContainerProps = {\n  width: string;\n  height: string;\n};\n\nexport const TextLineContainer = styled.div<TextLineContainerProps>`\n  ${({ width, height }) => \"\".concat(`width:${width};`, `height:${height};`)}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 3px;\n  padding: 10px;\n`;\n\nexport const TextContainer = styled.div`\n  height: 90%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport Text from \"../../elements/text\";\nimport Line from \"../../elements/line\";\nimport { TextContainer, TextLineContainer } from \"./styled\";\n\ntype UnderlinedTextProps = {\n  width: string;\n  height: string;\n  fontSize?: string;\n  textColor: string;\n  text?: string;\n  selectable?: boolean;\n};\n\nfunction UnderlinedText({\n  width,\n  height,\n  text,\n  fontSize,\n  textColor,\n  selectable,\n}: UnderlinedTextProps) {\n  return (\n    <TextLineContainer width={width} height={height}>\n      <TextContainer>\n        <Text\n          text={text ? text : \"\"}\n          fontSize={fontSize}\n          fontWeight=\"bold\"\n          color={textColor}\n          selectable={selectable}\n        />\n      </TextContainer>\n      <Line width={\"100%\"} color=\"black\" />\n    </TextLineContainer>\n  );\n}\n\nexport default UnderlinedText;\n","import styled from \"styled-components\";\n\ntype UnderlinedLettersContainerProps = {\n  width: string;\n  height: string;\n};\n\nexport const UnderlinedLettersContainer = styled.div<UnderlinedLettersContainerProps>`\n  ${({ width, height }) => \"\".concat(`width:${width};`, `height:${height};`)}\n  display:flex;\n  justify-content: center;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","import React from \"react\";\nimport UnderlinedText from \"../../components/underlined-text\";\nimport { UnderlinedLettersContainer } from \"./styled\";\n\ntype KeyboardProps = {\n  width: string;\n  height: string;\n  letterBoxSize: string;\n  letters: string[];\n  textColor: string;\n  fontSize?: string;\n};\n\nfunction UnderlinedLetters({\n  height,\n  width,\n  letterBoxSize,\n  letters,\n  fontSize,\n  textColor,\n}: KeyboardProps) {\n  return (\n    <UnderlinedLettersContainer height={height} width={width}>\n      {letters.map((letter, index) => (\n        <UnderlinedText\n          key={index}\n          textColor={textColor}\n          height={letterBoxSize}\n          width={letterBoxSize}\n          text={letter}\n          fontSize={fontSize}\n          selectable={false}\n        />\n      ))}\n    </UnderlinedLettersContainer>\n  );\n}\n\nexport default UnderlinedLetters;\n","import axios from \"axios\";\n\nconst options: any = {\n  method: \"GET\",\n  url: \"https://random-words-with-pronunciation.p.rapidapi.com/word\",\n  headers: {\n    \"x-rapidapi-key\": \"e036349bb4mshd5ec6288479a060p10b9fejsn1ff476a7babe\",\n    \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\",\n  },\n};\n\ntype ResponseType = {\n  word: string;\n  definition: string;\n  pronunciation: string;\n};\n\nexport async function getWord() {\n  const response = await axios.request<ResponseType[]>(options);\n\n  response.data[0].word = response.data[0].word.toLowerCase();\n  console.log(response.data[0]);\n  return response.data[0];\n}\n","import { colorPalette } from \"../theme\";\n\nconst alphabet = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nexport const convertMinutesToSeconds = (minutes: number) => {\n  return minutes * 60;\n};\n\nexport const addLetters = (wordLetters: string[]) => {\n  var lettersLeft = 30 - wordLetters.length;\n  var newLetters: string[] = [];\n\n  for (let i = 0; i < lettersLeft; i++) {\n    newLetters.push(getRandomItem(wordLetters, alphabet).randomItem);\n  }\n  return shuffle([...newLetters, ...wordLetters]).map((letter) => ({\n    value: letter,\n    color: \"white\",\n    disabled: false,\n    fontColor: colorPalette.primary,\n  }));\n};\n\n//gets a random item from an array which is not contained in filter\nexport const getRandomItem = (\n  filter: string[],\n  array: string[]\n): { randomItem: string; randomIndex: number } => {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  const randomItem = array[randomIndex];\n\n  return filter.find((character) => randomItem === character)\n    ? getRandomItem(filter, array)\n    : { randomItem, randomIndex };\n};\n\nexport const getClueIndex = (\n  letters: {\n    value: string;\n    disabled: boolean;\n    color: string;\n    fontColor: string;\n  }[],\n  wordLetters: string[]\n): number => {\n  return getRandomItem(\n    wordLetters,\n    letters.map((letter) => letter.value)\n  ).randomIndex;\n};\n\nexport const shuffle = (array: any[]) => {\n  return array\n    .sort(() => Math.random() - 0.5)\n    .filter((item, index) => array.indexOf(item) === index);\n};\n\nexport const getAllIndex = (array: string[], letter: string) => {\n  return array\n    .map((item, index) => {\n      if (item === letter) return index;\n    })\n    .filter((item) => item !== undefined) as number[];\n};\n","import React, { useEffect } from \"react\";\nimport { colorPalette } from \"../../theme\";\nimport { HiLightBulb } from \"react-icons/hi\";\nimport { ImShuffle } from \"react-icons/im\";\nimport Info from \"../../components/info\";\nimport Game from \"../../layouts/game\";\nimport Timer from \"../../elements/timer\";\nimport NotificationButton from \"../../components/notification-button\";\nimport Keyboard from \"../../modules/key-board\";\nimport TextNote from \"../../components/text-note\";\nimport ScorePanel from \"../../modules/score-panel\";\nimport Panel from \"../../components/panel\";\nimport TopBar from \"../../components/top-bar\";\nimport UnderlinedLetters from \"../../modules/underlined-letters\";\nimport { getWord } from \"../../api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  initGame,\n  letterGuessed,\n  letterGuessedFailed,\n  reduceClues,\n  reduceSkips,\n  reduceTimer,\n  wordGuessed,\n} from \"../../store/actions\";\nimport { GameState } from \"../../store/reducers\";\nimport { getAllIndex } from \"../../utils\";\n\nfunction GamePage() {\n  const dispatch = useDispatch();\n  const {\n    attemps,\n    time,\n    letters,\n    clues,\n    currentDescription,\n    currentWord,\n    lettersKeyboard,\n    currentWordSplitted,\n    loading,\n    score,\n    skips,\n    words,\n    timer,\n    toggle,\n  } = useSelector<GameState, GameState>((state) => state);\n\n  useEffect(() => {\n    getWord().then(({ definition, word }) =>\n      dispatch(initGame(word, definition))\n    );\n  }, []);\n\n  useEffect(() => {\n    console.log(currentWordSplitted);\n    if (\n      currentWordSplitted.every((currentValue) => currentValue !== undefined) &&\n      !loading\n    ) {\n      getWord().then(({ definition, word }) =>\n        dispatch(wordGuessed(300, !toggle, word, definition))\n      );\n    }\n  }, [currentWordSplitted, loading, toggle]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(reduceTimer());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function onClueClick() {\n    dispatch(reduceClues());\n  }\n  function onSkipClick() {\n    getWord().then(({ definition, word }) =>\n      dispatch(reduceSkips(word, definition))\n    );\n  }\n  function onExitClick() {}\n  function onKeyboardLetterClicked(index: number) {\n    const letterSelected = lettersKeyboard[index].value;\n    const currentWordSplitted = currentWord.split(\"\");\n    const indexs = getAllIndex(currentWordSplitted, letterSelected);\n    console.log(indexs);\n\n    currentWord.includes(letterSelected)\n      ? dispatch(letterGuessed(indexs, letterSelected))\n      : dispatch(letterGuessedFailed(index));\n  }\n\n  if (loading) return <div>loading...</div>;\n  if (attemps === 0 || timer < 0) return <div>Game over</div>;\n\n  return (\n    <>\n      <Game\n        topBar={\n          <TopBar\n            backgroundColor={colorPalette.primary}\n            height=\"100%\"\n            icon={<div />}\n            text={`Guess the word`}\n            fontSize=\"40px\"\n            textColor=\"white\"\n            onClick={onExitClick}\n          />\n        }\n        word={\n          <UnderlinedLetters\n            height=\"100%\"\n            width=\"100%\"\n            letterBoxSize=\"60px\"\n            fontSize=\"25px\"\n            letters={currentWordSplitted}\n            textColor={colorPalette.primary}\n          />\n        }\n        attemptsLeft={\n          <Info\n            infoTitle=\"Attempts left:\"\n            titleColor={colorPalette.primary}\n            info={attemps.toString()}\n            infoColor={colorPalette.secondary}\n            width=\"fit-content\"\n            fontSize=\"30px\"\n          />\n        }\n        clock={\n          <Timer\n            seconds={time}\n            size={\"150px\"}\n            color={colorPalette.primary}\n            toggle={toggle}\n          />\n        }\n        timer={\n          <Info\n            infoTitle=\"Time left:\"\n            titleColor={colorPalette.primary}\n            info={`${timer} seconds`}\n            infoColor={colorPalette.secondary}\n            width=\"fit-content\"\n          />\n        }\n        clueButton={\n          <NotificationButton\n            backgroundColor=\"white\"\n            circleColor={colorPalette.primary}\n            fontSize=\"30px\"\n            size=\"150px\"\n            text={clues.toString()}\n            textColor=\"white\"\n            disabled={clues === 0}\n            onClick={onClueClick}\n          >\n            <HiLightBulb size=\"100%\" color={colorPalette.primary} />\n          </NotificationButton>\n        }\n        nextButton={\n          <NotificationButton\n            backgroundColor=\"white\"\n            circleColor={colorPalette.primary}\n            fontSize=\"30px\"\n            size=\"150px\"\n            text={skips.toString()}\n            textColor=\"white\"\n            disabled={skips === 0}\n            onClick={onSkipClick}\n          >\n            <ImShuffle size=\"100%\" color={colorPalette.primary} />\n          </NotificationButton>\n        }\n        keyboard={\n          <Keyboard\n            buttonSize=\"50px\"\n            height=\"100%\"\n            width=\"100%\"\n            letters={lettersKeyboard}\n            fontSize=\"20px\"\n            onClick={onKeyboardLetterClicked}\n          />\n        }\n        noteDescription={\n          <TextNote\n            height=\"100%\"\n            width=\"100%\"\n            text={currentDescription}\n            fontSize=\"30px\"\n          />\n        }\n        leftBar={\n          <ScorePanel\n            score={score.toString()}\n            words={words.toString()}\n            letters={letters.toString()}\n            titleSize=\"30px\"\n            contentSize=\"25px\"\n          />\n        }\n        score={\n          <Panel\n            title=\"Score\"\n            content={score.toString()}\n            titleColor={colorPalette.primary}\n            contentColor={colorPalette.secondary}\n            flexDirection=\"row\"\n            titleSize=\"20px\"\n            contentSize=\"15px\"\n          />\n        }\n        words={\n          <Panel\n            title=\"Words\"\n            content={words.toString()}\n            titleColor={colorPalette.primary}\n            contentColor={colorPalette.secondary}\n            flexDirection=\"row\"\n            titleSize=\"20px\"\n            contentSize=\"15px\"\n          />\n        }\n        letters={\n          <Panel\n            title=\"Letters\"\n            content={letters.toString()}\n            titleColor={colorPalette.primary}\n            contentColor={colorPalette.secondary}\n            flexDirection=\"row\"\n            titleSize=\"20px\"\n            contentSize=\"15px\"\n          />\n        }\n      />\n    </>\n  );\n}\n\nexport default GamePage;\n","export const initGame = (currentWord: string, currentDescription: string) => {\n  return {\n    type: \"INIT_GAME\",\n    payload: {\n      currentWord,\n      currentDescription,\n    },\n  };\n};\n\n//SKIP ACTIONS\nexport const reduceSkips = (\n  currentWord: string,\n  currentDescription: string\n) => {\n  return {\n    type: \"REDUCE_SKIPS\",\n    payload: {\n      currentWord,\n      currentDescription,\n    },\n  };\n};\n\n//SCORE ACTIONS\nexport const letterGuessed = (indexes: number[], letter: string) => {\n  return {\n    type: \"LETTER_GUESSED\",\n    payload: {\n      indexes,\n      letter,\n    },\n  };\n};\n\nexport const letterGuessedFailed = (index: number) => {\n  return {\n    type: \"LETTER_GUESSED_FAILED\",\n    payload: {\n      index,\n    },\n  };\n};\n\nexport const wordGuessed = (\n  timer: number,\n  toggle: boolean,\n  currentWord: string,\n  currentDescription: string\n) => {\n  return {\n    type: \"WORD_GUESSED\",\n    payload: {\n      timer,\n      toggle,\n      currentWord,\n      currentDescription,\n    },\n  };\n};\n\n//CLUES ACTIONS\nexport const reduceClues = () => {\n  return {\n    type: \"REDUCE_CLUES\",\n  };\n};\n\n//TIMER\nexport const reduceTimer = () => {\n  return {\n    type: \"REDUCE_TIMER\",\n  };\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport GamePage from \"./pages/game-page\";\n\nexport const Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={GamePage} />\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Router } from \"./router\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { addLetters, getClueIndex } from \"../../utils\";\n\nexport type GameState = {\n  time: number;\n  timer: number;\n  clues: number;\n  skips: number;\n  score: number;\n  words: number;\n  letters: number;\n  attemps: number;\n  loading: boolean;\n  currentWord: string;\n  currentWordSplitted: string[];\n  lettersKeyboard: {\n    value: string;\n    color: string;\n    disabled: boolean;\n    fontColor: string;\n  }[];\n  currentDescription: string;\n  toggle: boolean;\n};\n\nconst initialState: GameState = {\n  attemps: 10,\n  clues: 5,\n  letters: 0,\n  score: 0,\n  skips: 5,\n  time: 300,\n  timer: 300,\n  words: 0,\n  loading: true,\n  currentWord: \"\",\n  currentWordSplitted: [],\n  lettersKeyboard: [],\n  currentDescription: \"\",\n  toggle: false,\n};\n\nexport const storeReducer = (\n  state: GameState = initialState,\n  action: any\n): GameState => {\n  switch (action.type) {\n    case \"INIT_GAME\":\n      const wordLetters = action.payload.currentWord.split(\"\");\n      return {\n        ...state,\n        loading: false,\n        currentWord: action.payload.currentWord,\n        currentWordSplitted: wordLetters.map(() => undefined),\n        lettersKeyboard: addLetters(wordLetters),\n        currentDescription: action.payload.currentDescription,\n      };\n\n    case \"REDUCE_TIMER\":\n      return {\n        ...state,\n        timer: state.timer - 1,\n      };\n\n    case \"LETTER_GUESSED\":\n      const newCurrentWordSplitted = [...state.currentWordSplitted];\n      const newLettersKeyboardColor = [...state.lettersKeyboard];\n      action.payload.indexes.forEach((index: number) => {\n        newCurrentWordSplitted[index] = action.payload.letter;\n      });\n      newLettersKeyboardColor.forEach((item, index) => {\n        if (item.value === action.payload.letter)\n          newLettersKeyboardColor[index] = {\n            ...item,\n            disabled: true,\n            color: \"#00B8FD\",\n          };\n      });\n      return {\n        ...state,\n        currentWordSplitted: newCurrentWordSplitted,\n        lettersKeyboard: newLettersKeyboardColor,\n        letters: state.letters + 1,\n        score: state.score + 5,\n      };\n\n    case \"LETTER_GUESSED_FAILED\":\n      const disabledLetterKeyboard = [...state.lettersKeyboard];\n      disabledLetterKeyboard[action.payload.index] = {\n        ...disabledLetterKeyboard[action.payload.index],\n        disabled: true,\n      };\n      return {\n        ...state,\n        lettersKeyboard: disabledLetterKeyboard,\n        attemps: state.attemps - 1,\n      };\n\n    case \"WORD_GUESSED\":\n      return {\n        ...state,\n        score: state.score + 20,\n        words: state.words + 1,\n        timer: action.payload.timer,\n        toggle: action.payload.toggle,\n        currentWord: action.payload.currentWord,\n        currentWordSplitted: action.payload.currentWord\n          .split(\"\")\n          .map(() => undefined),\n        lettersKeyboard: addLetters(action.payload.currentWord.split(\"\")),\n        currentDescription: action.payload.currentDescription,\n      };\n\n    case \"REDUCE_CLUES\":\n      const newLettersKeyboard = [...state.lettersKeyboard];\n      const clueIndex = getClueIndex(\n        state.lettersKeyboard,\n        state.currentWord.split(\"\")\n      );\n      newLettersKeyboard[clueIndex] = {\n        ...newLettersKeyboard[clueIndex],\n        disabled: true,\n      };\n      return {\n        ...state,\n        clues: state.clues - 1,\n        lettersKeyboard: newLettersKeyboard,\n      };\n\n    case \"REDUCE_SKIPS\":\n      return {\n        ...state,\n        skips: state.skips - 1,\n        currentWord: action.payload.currentWord,\n        currentWordSplitted: action.payload.currentWord\n          .split(\"\")\n          .map(() => undefined),\n        lettersKeyboard: addLetters(action.payload.currentWord.split(\"\")),\n        currentDescription: action.payload.currentDescription,\n      };\n\n    case \"CHANGE_WORD\":\n      return {\n        ...state,\n        currentWord: action.payload.currentWord,\n        currentWordSplitted: action.payload.currentWord\n          .split(\"\")\n          .map(() => undefined),\n        lettersKeyboard: addLetters(action.payload.currentWord.split(\"\")),\n        currentDescription: action.payload.currentDescription,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { storeReducer } from \"./store/reducers\";\n\nconst store = createStore(\n  storeReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n//comment\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}